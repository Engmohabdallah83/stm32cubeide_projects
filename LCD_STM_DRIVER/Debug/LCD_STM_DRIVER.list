
LCD_STM_DRIVER.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000015c  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800028c  0800028c  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800028c  0800028c  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  0800028c  0800028c  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800028c  0800028c  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800028c  0800028c  0001028c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000290  08000290  00010290  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08000294  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000004  08000298  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  08000298  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   000002d5  00000000  00000000  0002002d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000150  00000000  00000000  00020302  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  00020458  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000080  00000000  00000000  00020500  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000051b  00000000  00000000  00020580  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000600  00000000  00000000  00020a9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003f9a  00000000  00000000  0002109b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00025035  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001b0  00000000  00000000  00025088  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000004 	.word	0x20000004
 800014c:	00000000 	.word	0x00000000
 8000150:	08000274 	.word	0x08000274

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000008 	.word	0x20000008
 800016c:	08000274 	.word	0x08000274

08000170 <SysTick_Handler>:
	/*	Enable timer			*/
	SET_BIT((STK -> CTRL),0);
}

void	SysTick_Handler(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	b082      	sub	sp, #8
 8000174:	af00      	add	r7, sp, #0
	uint8 Local_u8Dummy = 0;
 8000176:	2300      	movs	r3, #0
 8000178:	71fb      	strb	r3, [r7, #7]
	if(u8_TypOfInterval == STK_SINGLE_INTERVAL)
 800017a:	4b12      	ldr	r3, [pc, #72]	; (80001c4 <SysTick_Handler+0x54>)
 800017c:	781b      	ldrb	r3, [r3, #0]
 800017e:	2b00      	cmp	r3, #0
 8000180:	d111      	bne.n	80001a6 <SysTick_Handler+0x36>
	{
		/*	Disable Interrupt		*/
		CLR_BIT((STK -> CTRL),1);
 8000182:	4b11      	ldr	r3, [pc, #68]	; (80001c8 <SysTick_Handler+0x58>)
 8000184:	681b      	ldr	r3, [r3, #0]
 8000186:	4a10      	ldr	r2, [pc, #64]	; (80001c8 <SysTick_Handler+0x58>)
 8000188:	f023 0302 	bic.w	r3, r3, #2
 800018c:	6013      	str	r3, [r2, #0]

		/*	Stop Timer 				*/
		CLR_BIT((STK -> CTRL),0);
 800018e:	4b0e      	ldr	r3, [pc, #56]	; (80001c8 <SysTick_Handler+0x58>)
 8000190:	681b      	ldr	r3, [r3, #0]
 8000192:	4a0d      	ldr	r2, [pc, #52]	; (80001c8 <SysTick_Handler+0x58>)
 8000194:	f023 0301 	bic.w	r3, r3, #1
 8000198:	6013      	str	r3, [r2, #0]
		STK -> VAL 	= 0;
 800019a:	4b0b      	ldr	r3, [pc, #44]	; (80001c8 <SysTick_Handler+0x58>)
 800019c:	2200      	movs	r2, #0
 800019e:	609a      	str	r2, [r3, #8]
		STK -> LOAD = 0;
 80001a0:	4b09      	ldr	r3, [pc, #36]	; (80001c8 <SysTick_Handler+0x58>)
 80001a2:	2200      	movs	r2, #0
 80001a4:	605a      	str	r2, [r3, #4]
	}

	STK_CallBack();
 80001a6:	4b09      	ldr	r3, [pc, #36]	; (80001cc <SysTick_Handler+0x5c>)
 80001a8:	681b      	ldr	r3, [r3, #0]
 80001aa:	4798      	blx	r3

	/*	Clear the interrupt Flag		*/
	Local_u8Dummy = (GET_BIT((STK -> CTRL),16));
 80001ac:	4b06      	ldr	r3, [pc, #24]	; (80001c8 <SysTick_Handler+0x58>)
 80001ae:	681b      	ldr	r3, [r3, #0]
 80001b0:	0c1b      	lsrs	r3, r3, #16
 80001b2:	b2db      	uxtb	r3, r3
 80001b4:	f003 0301 	and.w	r3, r3, #1
 80001b8:	71fb      	strb	r3, [r7, #7]
}
 80001ba:	bf00      	nop
 80001bc:	3708      	adds	r7, #8
 80001be:	46bd      	mov	sp, r7
 80001c0:	bd80      	pop	{r7, pc}
 80001c2:	bf00      	nop
 80001c4:	20000000 	.word	0x20000000
 80001c8:	e000e010 	.word	0xe000e010
 80001cc:	20000020 	.word	0x20000020

080001d0 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001d0:	b480      	push	{r7}
 80001d2:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 80001d4:	e7fe      	b.n	80001d4 <main+0x4>
	...

080001d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001d8:	480d      	ldr	r0, [pc, #52]	; (8000210 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001da:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001dc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001e0:	480c      	ldr	r0, [pc, #48]	; (8000214 <LoopForever+0x6>)
  ldr r1, =_edata
 80001e2:	490d      	ldr	r1, [pc, #52]	; (8000218 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001e4:	4a0d      	ldr	r2, [pc, #52]	; (800021c <LoopForever+0xe>)
  movs r3, #0
 80001e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001e8:	e002      	b.n	80001f0 <LoopCopyDataInit>

080001ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001ee:	3304      	adds	r3, #4

080001f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001f4:	d3f9      	bcc.n	80001ea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001f6:	4a0a      	ldr	r2, [pc, #40]	; (8000220 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001f8:	4c0a      	ldr	r4, [pc, #40]	; (8000224 <LoopForever+0x16>)
  movs r3, #0
 80001fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001fc:	e001      	b.n	8000202 <LoopFillZerobss>

080001fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000200:	3204      	adds	r2, #4

08000202 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000202:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000204:	d3fb      	bcc.n	80001fe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000206:	f000 f811 	bl	800022c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800020a:	f7ff ffe1 	bl	80001d0 <main>

0800020e <LoopForever>:

LoopForever:
  b LoopForever
 800020e:	e7fe      	b.n	800020e <LoopForever>
  ldr   r0, =_estack
 8000210:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000214:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000218:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 800021c:	08000294 	.word	0x08000294
  ldr r2, =_sbss
 8000220:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000224:	20000024 	.word	0x20000024

08000228 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000228:	e7fe      	b.n	8000228 <ADC1_2_IRQHandler>
	...

0800022c <__libc_init_array>:
 800022c:	b570      	push	{r4, r5, r6, lr}
 800022e:	2600      	movs	r6, #0
 8000230:	4d0c      	ldr	r5, [pc, #48]	; (8000264 <__libc_init_array+0x38>)
 8000232:	4c0d      	ldr	r4, [pc, #52]	; (8000268 <__libc_init_array+0x3c>)
 8000234:	1b64      	subs	r4, r4, r5
 8000236:	10a4      	asrs	r4, r4, #2
 8000238:	42a6      	cmp	r6, r4
 800023a:	d109      	bne.n	8000250 <__libc_init_array+0x24>
 800023c:	f000 f81a 	bl	8000274 <_init>
 8000240:	2600      	movs	r6, #0
 8000242:	4d0a      	ldr	r5, [pc, #40]	; (800026c <__libc_init_array+0x40>)
 8000244:	4c0a      	ldr	r4, [pc, #40]	; (8000270 <__libc_init_array+0x44>)
 8000246:	1b64      	subs	r4, r4, r5
 8000248:	10a4      	asrs	r4, r4, #2
 800024a:	42a6      	cmp	r6, r4
 800024c:	d105      	bne.n	800025a <__libc_init_array+0x2e>
 800024e:	bd70      	pop	{r4, r5, r6, pc}
 8000250:	f855 3b04 	ldr.w	r3, [r5], #4
 8000254:	4798      	blx	r3
 8000256:	3601      	adds	r6, #1
 8000258:	e7ee      	b.n	8000238 <__libc_init_array+0xc>
 800025a:	f855 3b04 	ldr.w	r3, [r5], #4
 800025e:	4798      	blx	r3
 8000260:	3601      	adds	r6, #1
 8000262:	e7f2      	b.n	800024a <__libc_init_array+0x1e>
 8000264:	0800028c 	.word	0x0800028c
 8000268:	0800028c 	.word	0x0800028c
 800026c:	0800028c 	.word	0x0800028c
 8000270:	08000290 	.word	0x08000290

08000274 <_init>:
 8000274:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000276:	bf00      	nop
 8000278:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800027a:	bc08      	pop	{r3}
 800027c:	469e      	mov	lr, r3
 800027e:	4770      	bx	lr

08000280 <_fini>:
 8000280:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000282:	bf00      	nop
 8000284:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000286:	bc08      	pop	{r3}
 8000288:	469e      	mov	lr, r3
 800028a:	4770      	bx	lr
